{"version":3,"file":"static/js/196.1dbaffd3.chunk.js","mappings":"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","sources":["../node_modules/@web3auth/base-solana-adapter/src/baseSolanaAdapter.ts","../node_modules/@toruslabs/solana-embed/node_modules/@toruslabs/openlogin-utils/src/randomId.ts","../node_modules/@toruslabs/solana-embed/node_modules/@toruslabs/openlogin-utils/src/url.ts","../node_modules/@toruslabs/solana-embed/node_modules/@toruslabs/openlogin-utils/src/utils.ts","../node_modules/@toruslabs/solana-embed/node_modules/@toruslabs/openlogin-jrpc/src/basePostMessageStream.ts","../node_modules/@toruslabs/solana-embed/node_modules/@toruslabs/openlogin-jrpc/src/safeEventEmitter.ts","../node_modules/@toruslabs/solana-embed/node_modules/@toruslabs/openlogin-jrpc/src/serializableError.ts","../node_modules/@toruslabs/solana-embed/node_modules/@toruslabs/openlogin-jrpc/src/jrpc.ts","../node_modules/@toruslabs/solana-embed/node_modules/@toruslabs/openlogin-jrpc/src/jrpcEngine.ts","../node_modules/@toruslabs/solana-embed/node_modules/@toruslabs/openlogin-jrpc/src/substream.ts","../node_modules/@toruslabs/solana-embed/node_modules/@toruslabs/openlogin-jrpc/src/mux.ts","../node_modules/@toruslabs/solana-embed/node_modules/@toruslabs/openlogin-jrpc/src/postMessageStream.ts","../../../src/messages.ts","../../../src/interfaces.ts","../../../src/config.ts","../../../src/loglevel.ts","../../../src/utils.ts","../../../src/baseProvider.ts","../../../src/embedUtils.ts","../../../src/PopupHandler.ts","../../../src/communicationProvider.ts","../../../src/inPageProvider.ts","../../../src/siteMetadata.ts","../../../src/embed.ts","../node_modules/@web3auth/torus-solana-adapter/src/solanaWalletAdapter.ts","../node_modules/fast-deep-equal/index.js","../node_modules/is-stream/index.js"],"sourcesContent":["import {\n  ADAPTER_EVENTS,\n  ADAPTER_STATUS,\n  AdapterInitOptions,\n  BaseAdapter,\n  CHAIN_NAMESPACES,\n  checkIfTokenIsExpired,\n  clearToken,\n  getChainConfig,\n  getSavedToken,\n  saveToken,\n  signChallenge,\n  UserAuthInfo,\n  verifySignedChallenge,\n  WalletLoginError,\n} from \"@web3auth/base\";\nimport bs58 from \"bs58\";\n\nexport abstract class BaseSolanaAdapter<T> extends BaseAdapter<T> {\n  async init(_?: AdapterInitOptions): Promise<void> {\n    if (!this.chainConfig) this.chainConfig = getChainConfig(CHAIN_NAMESPACES.SOLANA, 1);\n  }\n\n  async authenticateUser(): Promise<UserAuthInfo> {\n    if (!this.provider || this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError();\n\n    const { chainNamespace, chainId } = this.chainConfig;\n\n    const accounts = await this.provider.request<string[]>({\n      method: \"getAccounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      const existingToken = getSavedToken(accounts[0] as string, this.name);\n      if (existingToken) {\n        const isExpired = checkIfTokenIsExpired(existingToken);\n        if (!isExpired) {\n          return { idToken: existingToken };\n        }\n      }\n\n      const payload = {\n        domain: window.location.origin,\n        uri: window.location.href,\n        address: accounts[0],\n        chainId: parseInt(chainId, 16),\n        version: \"1\",\n        nonce: Math.random().toString(36).slice(2),\n        issuedAt: new Date().toISOString(),\n      };\n\n      const challenge = await signChallenge(payload, chainNamespace);\n      const encodedMessage = new TextEncoder().encode(challenge);\n      const signedMessage = await this.provider.request<Uint8Array>({\n        method: \"signMessage\",\n        params: {\n          message: encodedMessage,\n          display: \"utf8\",\n        },\n      });\n      const idToken = await verifySignedChallenge(\n        chainNamespace,\n        bs58.encode(signedMessage as Uint8Array),\n        challenge,\n        this.name,\n        this.sessionTime,\n        this.clientId,\n        this.web3AuthNetwork\n      );\n      saveToken(accounts[0] as string, this.name, idToken);\n      return {\n        idToken,\n      };\n    }\n    throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n  }\n\n  async disconnectSession(): Promise<void> {\n    super.checkDisconnectionRequirements();\n    const accounts = await this.provider.request<string[]>({\n      method: \"getAccounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      clearToken(accounts[0], this.name);\n    }\n  }\n\n  async disconnect(): Promise<void> {\n    this.rehydrated = false;\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n}\n","import randombytes from \"randombytes\";\n\nexport const randomId = (): string => randombytes(32).toString(\"hex\");\n","import { HashParams } from \"./hashParams\";\n\nexport class URLWithHashParams extends URL {\n  hashParams: HashParams = new URLSearchParams();\n\n  toString(): string {\n    this.hash = this.hashParams.toString();\n    return super.toString.call(this);\n  }\n}\n","import base64urlLib from \"base64url\";\nimport keccakLib from \"keccak\";\n\nexport const base64url = base64urlLib;\n\nexport function safebtoa(str: string): string {\n  return base64url.encode(str);\n}\n\nexport function safeatob(str: string): string {\n  // Going backwards: from bytestream, to percent-encoding, to original string.\n  return base64url.decode(str);\n}\n\nexport const keccak = keccakLib;\n\nexport type BufferEncoding = \"ascii\" | \"utf8\" | \"utf-8\" | \"utf16le\" | \"ucs2\" | \"ucs-2\" | \"base64\" | \"latin1\" | \"binary\" | \"hex\";\n\nexport function base64toJSON(b64str: string): Record<string, unknown> {\n  return JSON.parse(base64url.decode(b64str));\n}\n\nexport function jsonToBase64(json: Record<string, unknown>): string {\n  return base64url.encode(JSON.stringify(json));\n}\n\nexport function keccak256(str: string): string {\n  let input: string | Buffer = str;\n  if (typeof str === \"string\" && str.slice(0, 2) === \"0x\" && str.length === 66) {\n    input = Buffer.from(str.slice(2), \"hex\");\n  }\n  const data = `0x${keccak(\"keccak256\").update(input).digest(\"hex\").padStart(64, \"0\")}`;\n  return data;\n}\n\nexport interface BaseLoginOptions {\n  /**\n   * If you need to send custom parameters to the Authorization Server,\n   * make sure to use the original parameter name.\n   */\n  [key: string]: unknown;\n  /**\n   * - `'page'`: displays the UI with a full page view\n   * - `'popup'`: displays the UI with a popup window\n   * - `'touch'`: displays the UI in a way that leverages a touch interface\n   * - `'wap'`: displays the UI with a \"feature phone\" type interface\n   */\n  display?: \"page\" | \"popup\" | \"touch\" | \"wap\" | string;\n  /**\n   * - `'none'`: do not prompt user for login or consent on re-authentication\n   * - `'login'`: prompt user for re-authentication\n   * - `'consent'`: prompt user for consent before processing request\n   * - `'select_account'`: prompt user to select an account\n   */\n  prompt?: \"none\" | \"login\" | \"consent\" | \"select_account\" | string;\n  /**\n   * Maximum allowable elapsed time (in seconds) since authentication.\n   * If the last time the user authenticated is greater than this value,\n   * the user must be re-authenticated.\n   */\n  max_age?: string | number;\n  /**\n   * The space-separated list of language tags, ordered by preference.\n   * For example: `'fr-CA fr en'`.\n   */\n  ui_locales?: string;\n  /**\n   * Previously issued ID Token.\n   */\n  id_token_hint?: string;\n  /**\n   * The user's email address or other identifier. When your app knows\n   * which user is trying to authenticate, you can provide this parameter\n   * to pre-fill the email box or select the right session for sign-in.\n   *\n   * This currently only affects the classic Lock experience.\n   */\n  login_hint?: string;\n  acr_values?: string;\n  /**\n   * The default scope to be used on authentication requests.\n   * The defaultScope defined in the Auth0Client is included\n   * along with this scope\n   */\n  scope?: string;\n  /**\n   * The default audience to be used for requesting API access.\n   */\n  audience?: string;\n  /**\n   * The name of the connection configured for your application.\n   * If null, it will redirect to the Auth0 Login Page and show\n   * the Login Widget.\n   */\n  connection?: string;\n}\n\nexport interface ExtraLoginOptions extends BaseLoginOptions {\n  /**\n   * Your Auth0 account domain such as `'example.auth0.com'`,\n   * `'example.eu.auth0.com'` or , `'example.mycompany.com'`\n   * (when using [custom domains](https://auth0.com/docs/custom-domains))\n   */\n  domain?: string;\n  /**\n   * The Client ID found on your Application settings page\n   */\n  client_id?: string;\n  /**\n   * The default URL where Auth0 will redirect your browser to with\n   * the authentication result. It must be whitelisted in\n   * the \"Allowed Callback URLs\" field in your Auth0 Application's\n   * settings. If not provided here, it should be provided in the other\n   * methods that provide authentication.\n   */\n  redirect_uri?: string;\n  /**\n   * The value in seconds used to account for clock skew in JWT expirations.\n   * Typically, this value is no more than a minute or two at maximum.\n   * Defaults to 60s.\n   */\n  leeway?: number;\n  /**\n   * The field in jwt token which maps to verifier id\n   */\n  verifierIdField?: string;\n  /**\n   * Whether the verifier id field is case sensitive\n   * @defaultValue true\n   */\n  isVerifierIdCaseSensitive?: boolean;\n}\n","import { Duplex } from \"readable-stream\";\n\nfunction noop(): void {\n  return undefined;\n}\n\nconst SYN = \"SYN\";\nconst ACK = \"ACK\";\nconst BRK = \"BRK\";\n\nexport default class BasePostMessageStream extends Duplex {\n  _init: boolean;\n\n  _haveSyn: boolean;\n\n  _name: string;\n\n  _target: string;\n\n  _targetWindow: Window;\n\n  _targetOrigin: string;\n\n  _onMessage: any;\n\n  _synIntervalId: number;\n\n  constructor({\n    name,\n    target,\n    targetWindow = window,\n    targetOrigin = \"*\",\n  }: {\n    name: string;\n    target: string;\n    targetWindow?: Window;\n    targetOrigin?: string;\n  }) {\n    super({\n      objectMode: true,\n    });\n    if (!name || !target) {\n      throw new Error(\"Invalid input.\");\n    }\n    this._init = false;\n    this._haveSyn = false;\n    this._name = name;\n    this._target = target; // target origin\n    this._targetWindow = targetWindow;\n    this._targetOrigin = targetOrigin;\n    this._onMessage = this.onMessage.bind(this);\n    this._synIntervalId = null;\n\n    window.addEventListener(\"message\", this._onMessage, false);\n    this._handShake();\n  }\n\n  _break(): void {\n    this.cork();\n    this._write(BRK, null, noop);\n    this._haveSyn = false;\n    this._init = false;\n  }\n\n  _handShake(): void {\n    this._write(SYN, null, noop);\n    this.cork();\n  }\n\n  _onData(data: unknown): void {\n    if (!this._init) {\n      // listen for handshake\n      if (data === SYN) {\n        this._haveSyn = true;\n        this._write(ACK, null, noop);\n      } else if (data === ACK) {\n        this._init = true;\n        if (!this._haveSyn) {\n          this._write(ACK, null, noop);\n        }\n        this.uncork();\n      }\n    } else if (data === BRK) {\n      this._break();\n    } else {\n      // forward message\n      try {\n        this.push(data);\n      } catch (err) {\n        this.emit(\"error\", err);\n      }\n    }\n  }\n\n  _postMessage(data: unknown): void {\n    const originConstraint = this._targetOrigin;\n    this._targetWindow.postMessage(\n      {\n        target: this._target,\n        data,\n      },\n      originConstraint\n    );\n  }\n\n  onMessage(event: MessageEvent): void {\n    const message = event.data;\n\n    // validate message\n    if (\n      (this._targetOrigin !== \"*\" && event.origin !== this._targetOrigin) ||\n      event.source !== this._targetWindow ||\n      typeof message !== \"object\" ||\n      message.target !== this._name ||\n      !message.data\n    ) {\n      return;\n    }\n\n    this._onData(message.data);\n  }\n\n  _read(): void {\n    return undefined;\n  }\n\n  _write(data: unknown, _, cb: () => void): void {\n    this._postMessage(data);\n    cb();\n  }\n\n  _destroy(): void {\n    window.removeEventListener(\"message\", this._onMessage, false);\n  }\n}\n","import { EventEmitter } from \"events\";\n\ntype Handler = (...args: any[]) => void;\ninterface EventMap {\n  [k: string]: Handler | Handler[] | undefined;\n}\n\nfunction safeApply<T, A extends any[]>(handler: (this: T, ...handlerArgs: A) => void, context: T, args: A): void {\n  try {\n    Reflect.apply(handler, context, args);\n  } catch (err) {\n    // Throw error after timeout so as not to interrupt the stack\n    setTimeout(() => {\n      throw err;\n    });\n  }\n}\n\nfunction arrayClone<T>(arr: T[]): T[] {\n  const n = arr.length;\n  const copy = new Array(n);\n  for (let i = 0; i < n; i += 1) {\n    copy[i] = arr[i];\n  }\n  return copy;\n}\n\nexport default class SafeEventEmitter extends EventEmitter {\n  emit(type: string, ...args: any[]): boolean {\n    let doError = type === \"error\";\n\n    const events: EventMap = (this as any)._events;\n    if (events !== undefined) {\n      doError = doError && events.error === undefined;\n    } else if (!doError) {\n      return false;\n    }\n\n    // If there is no 'error' event listener then throw.\n    if (doError) {\n      let er;\n      if (args.length > 0) {\n        [er] = args;\n      }\n      if (er instanceof Error) {\n        // Note: The comments on the `throw` lines are intentional, they show\n        // up in Node's output if this results in an unhandled exception.\n        throw er; // Unhandled 'error' event\n      }\n      // At least give some kind of context to the user\n      const err = new Error(`Unhandled error.${er ? ` (${er.message})` : \"\"}`);\n      (err as any).context = er;\n      throw err; // Unhandled 'error' event\n    }\n\n    const handler = events[type];\n\n    if (handler === undefined) {\n      return false;\n    }\n\n    if (typeof handler === \"function\") {\n      safeApply(handler, this, args);\n    } else {\n      const len = handler.length;\n      const listeners = arrayClone(handler);\n      for (let i = 0; i < len; i += 1) {\n        safeApply(listeners[i], this, args);\n      }\n    }\n\n    return true;\n  }\n}\n","import stringify from \"fast-safe-stringify\";\n\nexport default class SerializableError<T> extends Error {\n  public code: number;\n\n  public data: T;\n\n  constructor({ code, message, data }: { code: number; message: string; data?: T }) {\n    if (!Number.isInteger(code)) {\n      throw new Error(\"code must be an integer\");\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error(\"message must be string\");\n    }\n\n    super(message);\n    this.code = code;\n    if (data !== undefined) {\n      this.data = data;\n    }\n  }\n\n  toString(): string {\n    return stringify({\n      code: this.code,\n      message: this.message,\n      data: this.data,\n      stack: this.stack,\n    });\n  }\n}\n","import { randomId } from \"@toruslabs/openlogin-utils\";\nimport { Duplex } from \"readable-stream\";\n\nimport SafeEventEmitter from \"./safeEventEmitter\";\nimport SerializableError from \"./serializableError\";\n\nexport type Json = boolean | number | string | null | { [property: string]: Json } | Json[];\n\nexport type JRPCVersion = \"2.0\";\nexport type JRPCId = number | string | void;\n\nexport type ConsoleLike = Pick<Console, \"log\" | \"warn\" | \"error\" | \"debug\" | \"info\" | \"trace\">;\nexport interface JRPCBase {\n  jsonrpc?: JRPCVersion;\n  id?: JRPCId;\n}\n\nexport interface JRPCResponse<T> extends JRPCBase {\n  result?: T;\n  error?: any;\n}\n\nexport const getRpcPromiseCallback =\n  (resolve: (value?: any) => void, reject: (error?: Error) => void, unwrapResult = true) =>\n  (error: Error, response: JRPCResponse<unknown>): void => {\n    if (error || response.error) {\n      reject(error || response.error);\n    } else if (!unwrapResult || Array.isArray(response)) {\n      resolve(response);\n    } else {\n      resolve(response.result);\n    }\n  };\n\nexport interface JRPCRequest<T> extends JRPCBase {\n  method: string;\n  params?: T;\n}\n\nexport type JRPCEngineNextCallback = (cb?: (done: (error?: Error) => void) => void) => void;\nexport type JRPCEngineEndCallback = (error?: Error) => void;\nexport type JRPCEngineReturnHandler = (done: (error?: Error) => void) => void;\n\ninterface IdMapValue {\n  req: JRPCRequest<unknown>;\n  res: JRPCResponse<unknown>;\n  next: JRPCEngineNextCallback;\n  end: JRPCEngineEndCallback;\n}\n\ninterface IdMap {\n  [requestId: string]: IdMapValue;\n}\n\nexport type JRPCMiddleware<T, U> = (req: JRPCRequest<T>, res: JRPCResponse<U>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => void;\n\nexport function createErrorMiddleware(log: ConsoleLike): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, end) => {\n    try {\n      // json-rpc-engine will terminate the request when it notices this error\n      if (typeof req.method !== \"string\" || !req.method) {\n        res.error = new SerializableError({ code: -32603, message: \"invalid method\" });\n        end();\n        return;\n      }\n      next((done) => {\n        const { error } = res;\n        if (!error) {\n          return done();\n        }\n        log.error(`OpenLogin - RPC Error: ${error.message}`, error);\n        return done();\n      });\n    } catch (error) {\n      log.error(`OpenLogin - RPC Error thrown: ${error.message}`, error);\n      res.error = new SerializableError({ code: -32603, message: error.message });\n      end();\n    }\n  };\n}\n\nexport function createStreamMiddleware(): { events: SafeEventEmitter; middleware: JRPCMiddleware<unknown, unknown>; stream: Duplex } {\n  const idMap: IdMap = {};\n\n  function readNoop() {\n    return false;\n  }\n\n  const events = new SafeEventEmitter();\n\n  function processResponse(res: JRPCResponse<unknown>) {\n    const context = idMap[res.id as unknown as string];\n    if (!context) {\n      throw new Error(`StreamMiddleware - Unknown response id \"${res.id}\"`);\n    }\n\n    delete idMap[res.id as unknown as string];\n    // copy whole res onto original res\n    Object.assign(context.res, res);\n    // run callback on empty stack,\n    // prevent internal stream-handler from catching errors\n    setTimeout(context.end);\n  }\n\n  function processNotification(res: JRPCRequest<unknown>) {\n    events.emit(\"notification\", res);\n  }\n\n  function processMessage(res: JRPCResponse<unknown>, _encoding: unknown, cb: (error?: Error | null) => void) {\n    let err;\n    try {\n      const isNotification = !res.id;\n      if (isNotification) {\n        processNotification(res as unknown as JRPCRequest<unknown>);\n      } else {\n        processResponse(res);\n      }\n    } catch (_err) {\n      err = _err;\n    }\n    // continue processing stream\n    cb(err);\n  }\n\n  const stream = new Duplex({\n    objectMode: true,\n    read: readNoop,\n    write: processMessage,\n  });\n\n  const middleware: JRPCMiddleware<unknown, unknown> = (req, res, next, end) => {\n    // write req to stream\n    stream.push(req);\n    // register request on id map\n    idMap[req.id as unknown as string] = { req, res, next, end };\n  };\n\n  return { events, middleware, stream };\n}\n\ntype ScaffoldMiddlewareHandler<T, U> = JRPCMiddleware<T, U> | Json;\n\nexport function createScaffoldMiddleware(handlers: {\n  [methodName: string]: ScaffoldMiddlewareHandler<unknown, unknown>;\n}): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, end) => {\n    const handler = handlers[req.method];\n    // if no handler, return\n    if (handler === undefined) {\n      return next();\n    }\n    // if handler is fn, call as middleware\n    if (typeof handler === \"function\") {\n      return handler(req, res, next, end);\n    }\n    // if handler is some other value, use as result\n    res.result = handler;\n    return end();\n  };\n}\n\nexport function createIdRemapMiddleware(): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, _end) => {\n    const originalId = req.id;\n    const newId = randomId();\n    req.id = newId;\n    res.id = newId;\n    next((done) => {\n      req.id = originalId;\n      res.id = originalId;\n      done();\n    });\n  };\n}\n\nexport function createLoggerMiddleware(logger: ConsoleLike): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, _) => {\n    logger.debug(\"REQ\", req, \"RES\", res);\n    next();\n  };\n}\n\nexport type AsyncJRPCEngineNextCallback = () => Promise<void>;\n\ntype Maybe<T> = Partial<T> | null | undefined;\n\nexport interface JRPCSuccess<T> extends JRPCBase {\n  result: Maybe<T>;\n}\n\nexport interface JRPCError {\n  code: number;\n  message: string;\n  data?: unknown;\n  stack?: string;\n}\n\nexport interface PendingJRPCResponse<T> extends JRPCBase {\n  result?: T;\n  error?: Error | JRPCError;\n}\n\nexport interface JRPCFailure extends JRPCBase {\n  error: JRPCError;\n}\n\nexport type AsyncJRPCMiddleware<T, U> = (req: JRPCRequest<T>, res: PendingJRPCResponse<U>, next: AsyncJRPCEngineNextCallback) => Promise<void>;\n\ntype ReturnHandlerCallback = (error: null | Error) => void;\n\nexport function createAsyncMiddleware<T, U>(asyncMiddleware: AsyncJRPCMiddleware<T, U>): JRPCMiddleware<T, U> {\n  return async (req, res, next, end) => {\n    // nextPromise is the key to the implementation\n    // it is resolved by the return handler passed to the\n    // \"next\" function\n    let resolveNextPromise: () => void;\n    const nextPromise = new Promise<void>((resolve) => {\n      resolveNextPromise = resolve;\n    });\n\n    let returnHandlerCallback: unknown = null;\n    let nextWasCalled = false;\n\n    // This will be called by the consumer's async middleware.\n    const asyncNext = async () => {\n      nextWasCalled = true;\n\n      // We pass a return handler to next(). When it is called by the engine,\n      // the consumer's async middleware will resume executing.\n\n      next((runReturnHandlersCallback) => {\n        // This callback comes from JRPCEngine._runReturnHandlers\n        returnHandlerCallback = runReturnHandlersCallback;\n        resolveNextPromise();\n      });\n      await nextPromise;\n    };\n\n    try {\n      await asyncMiddleware(req, res, asyncNext);\n\n      if (nextWasCalled) {\n        await nextPromise; // we must wait until the return handler is called\n        (returnHandlerCallback as ReturnHandlerCallback)(null);\n      } else {\n        end(null);\n      }\n    } catch (error) {\n      if (returnHandlerCallback) {\n        (returnHandlerCallback as ReturnHandlerCallback)(error);\n      } else {\n        end(error);\n      }\n    }\n  };\n}\n","import { serializeError } from \"eth-rpc-errors\";\nimport { Duplex } from \"readable-stream\";\n\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCEngineReturnHandler, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"./jrpc\";\nimport SafeEventEmitter from \"./safeEventEmitter\";\nimport SerializableError from \"./serializableError\";\n\n/**\n * A JSON-RPC request and response processor.\n * Give it a stack of middleware, pass it requests, and get back responses.\n */\nexport class JRPCEngine extends SafeEventEmitter {\n  private _middleware: JRPCMiddleware<unknown, unknown>[];\n\n  constructor() {\n    super();\n    this._middleware = [];\n  }\n\n  /**\n   * Serially executes the given stack of middleware.\n   *\n   * @returns An array of any error encountered during middleware execution,\n   * a boolean indicating whether the request was completed, and an array of\n   * middleware-defined return handlers.\n   */\n  private static async _runAllMiddleware(\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<unknown>,\n    middlewareStack: JRPCMiddleware<unknown, unknown>[]\n  ): Promise<\n    [\n      unknown, // error\n      boolean, // isComplete\n      JRPCEngineReturnHandler[]\n    ]\n  > {\n    const returnHandlers: JRPCEngineReturnHandler[] = [];\n    let error = null;\n    let isComplete = false;\n\n    // Go down stack of middleware, call and collect optional returnHandlers\n    for (const middleware of middlewareStack) {\n      [error, isComplete] = await JRPCEngine._runMiddleware(req, res, middleware, returnHandlers);\n      if (isComplete) {\n        break;\n      }\n    }\n    return [error, isComplete, returnHandlers.reverse()];\n  }\n\n  /**\n   * Runs an individual middleware.\n   *\n   * @returns An array of any error encountered during middleware exection,\n   * and a boolean indicating whether the request should end.\n   */\n  private static _runMiddleware(\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<unknown>,\n    middleware: JRPCMiddleware<unknown, unknown>,\n    returnHandlers: JRPCEngineReturnHandler[]\n  ): Promise<[unknown, boolean]> {\n    return new Promise((resolve) => {\n      const end: JRPCEngineEndCallback = (err?: unknown) => {\n        const error = err || res.error;\n        if (error) {\n          res.error = serializeError(error);\n        }\n        // True indicates that the request should end\n        resolve([error, true]);\n      };\n\n      const next: JRPCEngineNextCallback = (returnHandler?: JRPCEngineReturnHandler) => {\n        if (res.error) {\n          end(res.error);\n        } else {\n          if (returnHandler) {\n            if (typeof returnHandler !== \"function\") {\n              end(new SerializableError({ code: -32603, message: \"JRPCEngine: 'next' return handlers must be functions\" }));\n            }\n            returnHandlers.push(returnHandler);\n          }\n\n          // False indicates that the request should not end\n          resolve([null, false]);\n        }\n      };\n\n      try {\n        middleware(req, res, next, end);\n      } catch (error) {\n        end(error);\n      }\n    });\n  }\n\n  /**\n   * Serially executes array of return handlers. The request and response are\n   * assumed to be in their scope.\n   */\n  private static async _runReturnHandlers(handlers: JRPCEngineReturnHandler[]): Promise<void> {\n    for (const handler of handlers) {\n      await new Promise<void>((resolve, reject) => {\n        handler((err) => (err ? reject(err) : resolve()));\n      });\n    }\n  }\n\n  /**\n   * Throws an error if the response has neither a result nor an error, or if\n   * the \"isComplete\" flag is falsy.\n   */\n  private static _checkForCompletion(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>, isComplete: boolean): void {\n    if (!(\"result\" in res) && !(\"error\" in res)) {\n      throw new SerializableError({ code: -32603, message: \"Response has no error or result for request\" });\n    }\n    if (!isComplete) {\n      throw new SerializableError({ code: -32603, message: \"Nothing ended request\" });\n    }\n  }\n\n  /**\n   * Add a middleware function to the engine's middleware stack.\n   *\n   * @param middleware - The middleware function to add.\n   */\n  push<T, U>(middleware: JRPCMiddleware<T, U>): void {\n    this._middleware.push(middleware as JRPCMiddleware<unknown, unknown>);\n  }\n\n  /**\n   * Handle a JSON-RPC request, and return a response.\n   *\n   * @param request - The request to handle.\n   * @param callback - An error-first callback that will receive the response.\n   */\n  handle<T, U>(request: JRPCRequest<T>, callback: (error: unknown, response: JRPCResponse<U>) => void): void;\n\n  /**\n   * Handle an array of JSON-RPC requests, and return an array of responses.\n   *\n   * @param request - The requests to handle.\n   * @param callback - An error-first callback that will receive the array of\n   * responses.\n   */\n  handle<T, U>(requests: JRPCRequest<T>[], callback: (error: unknown, responses: JRPCResponse<U>[]) => void): void;\n\n  /**\n   * Handle a JSON-RPC request, and return a response.\n   *\n   * @param request - The request to handle.\n   * @returns A promise that resolves with the response, or rejects with an\n   * error.\n   */\n  handle<T, U>(request: JRPCRequest<T>): Promise<JRPCResponse<U>>;\n\n  /**\n   * Handle an array of JSON-RPC requests, and return an array of responses.\n   *\n   * @param request - The requests to handle.\n   * @returns A promise that resolves with the array of responses, or rejects\n   * with an error.\n   */\n  handle<T, U>(requests: JRPCRequest<T>[]): Promise<JRPCResponse<U>[]>;\n\n  handle(req: unknown, cb?: any) {\n    if (cb && typeof cb !== \"function\") {\n      throw new Error('\"callback\" must be a function if provided.');\n    }\n\n    if (Array.isArray(req)) {\n      if (cb) {\n        return this._handleBatch(req, cb);\n      }\n      return this._handleBatch(req);\n    }\n\n    if (cb) {\n      return this._handle(req as JRPCRequest<unknown>, cb);\n    }\n    return this._promiseHandle(req as JRPCRequest<unknown>);\n  }\n\n  /**\n   * Returns this engine as a middleware function that can be pushed to other\n   * engines.\n   *\n   * @returns This engine as a middleware function.\n   */\n  asMiddleware(): JRPCMiddleware<unknown, unknown> {\n    return async (req, res, next, end) => {\n      try {\n        const [middlewareError, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware);\n\n        if (isComplete) {\n          await JRPCEngine._runReturnHandlers(returnHandlers);\n          return end(middlewareError as Error);\n        }\n\n        return next(async (handlerCallback) => {\n          try {\n            await JRPCEngine._runReturnHandlers(returnHandlers);\n          } catch (error) {\n            return handlerCallback(error);\n          }\n          return handlerCallback();\n        });\n      } catch (error) {\n        return end(error);\n      }\n    };\n  }\n\n  /**\n   * Like _handle, but for batch requests.\n   */\n  private _handleBatch(reqs: JRPCRequest<unknown>[]): Promise<JRPCResponse<unknown>[]>;\n\n  /**\n   * Like _handle, but for batch requests.\n   */\n  private _handleBatch(reqs: JRPCRequest<unknown>[], cb: (error: unknown, responses?: JRPCResponse<unknown>[]) => void): Promise<void>;\n\n  private async _handleBatch(\n    reqs: JRPCRequest<unknown>[],\n    cb?: (error: unknown, responses?: JRPCResponse<unknown>[]) => void\n  ): Promise<JRPCResponse<unknown>[] | void> {\n    // The order here is important\n    try {\n      // 2. Wait for all requests to finish, or throw on some kind of fatal\n      // error\n      const responses = await Promise.all(\n        // 1. Begin executing each request in the order received\n        reqs.map(this._promiseHandle.bind(this))\n      );\n\n      // 3. Return batch response\n      if (cb) {\n        return cb(null, responses);\n      }\n      return responses;\n    } catch (error) {\n      if (cb) {\n        return cb(error);\n      }\n\n      throw error;\n    }\n  }\n\n  /**\n   * A promise-wrapped _handle.\n   */\n  private _promiseHandle(req: JRPCRequest<unknown>): Promise<JRPCResponse<unknown>> {\n    return new Promise((resolve) => {\n      this._handle(req, (_err, res) => {\n        // There will always be a response, and it will always have any error\n        // that is caught and propagated.\n        resolve(res);\n      });\n    });\n  }\n\n  /**\n   * Ensures that the request object is valid, processes it, and passes any\n   * error and the response object to the given callback.\n   *\n   * Does not reject.\n   */\n  private async _handle(callerReq: JRPCRequest<unknown>, cb: (error: unknown, response: JRPCResponse<unknown>) => void): Promise<void> {\n    if (!callerReq || Array.isArray(callerReq) || typeof callerReq !== \"object\") {\n      const error = new SerializableError({ code: -32603, message: \"request must be plain object\" });\n      return cb(error, { id: undefined, jsonrpc: \"2.0\", error });\n    }\n\n    if (typeof callerReq.method !== \"string\") {\n      const error = new SerializableError({ code: -32603, message: \"method must be string\" });\n      return cb(error, { id: callerReq.id, jsonrpc: \"2.0\", error });\n    }\n\n    const req: JRPCRequest<unknown> = { ...callerReq };\n    const res: JRPCResponse<unknown> = {\n      id: req.id,\n      jsonrpc: req.jsonrpc,\n    };\n    let error: Error = null;\n\n    try {\n      await this._processRequest(req, res);\n    } catch (_error) {\n      // A request handler error, a re-thrown middleware error, or something\n      // unexpected.\n      error = _error;\n    }\n\n    if (error) {\n      // Ensure no result is present on an errored response\n      delete res.result;\n      if (!res.error) {\n        res.error = serializeError(error);\n      }\n    }\n\n    return cb(error, res as JRPCResponse<unknown>);\n  }\n\n  /**\n   * For the given request and response, runs all middleware and their return\n   * handlers, if any, and ensures that internal request processing semantics\n   * are satisfied.\n   */\n  private async _processRequest(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    const [error, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware);\n\n    // Throw if \"end\" was not called, or if the response has neither a result\n    // nor an error.\n    JRPCEngine._checkForCompletion(req, res, isComplete);\n\n    // The return handlers should run even if an error was encountered during\n    // middleware processing.\n    await JRPCEngine._runReturnHandlers(returnHandlers);\n\n    // Now we re-throw the middleware processing error, if any, to catch it\n    // further up the call chain.\n    if (error) {\n      throw error;\n    }\n  }\n}\n\nexport function mergeMiddleware(middlewareStack: JRPCMiddleware<unknown, unknown>[]): JRPCMiddleware<unknown, unknown> {\n  const engine = new JRPCEngine();\n  middlewareStack.forEach((middleware) => engine.push(middleware));\n  return engine.asMiddleware();\n}\n\nexport interface EngineStreamOptions {\n  engine: JRPCEngine;\n}\n\nexport function createEngineStream(opts: EngineStreamOptions): Duplex {\n  if (!opts || !opts.engine) {\n    throw new Error(\"Missing engine parameter!\");\n  }\n\n  const { engine } = opts;\n  // eslint-disable-next-line prefer-const\n  let stream: Duplex;\n\n  function read() {\n    return undefined;\n  }\n\n  function write(req: JRPCRequest<unknown>, _encoding: unknown, cb: (error?: Error | null) => void) {\n    engine.handle(req, (_err, res) => {\n      stream.push(res);\n    });\n    cb();\n  }\n\n  stream = new Duplex({ objectMode: true, read, write });\n\n  // forward notifications\n  if (engine.on) {\n    engine.on(\"notification\", (message) => {\n      stream.push(message);\n    });\n  }\n  return stream;\n}\n","import { BufferEncoding } from \"@toruslabs/openlogin-utils\";\nimport { Duplex } from \"readable-stream\";\n\nexport default class Substream extends Duplex {\n  private readonly _parent: any;\n\n  private readonly _name: string;\n\n  constructor({ parent, name }: { parent: any; name: string }) {\n    super({ objectMode: true });\n    this._parent = parent;\n    this._name = name;\n  }\n\n  /**\n   * Explicitly sets read operations to a no-op.\n   */\n  _read(): void {\n    return undefined;\n  }\n\n  /**\n   * Called when data should be written to this writable stream.\n   *\n   * @param chunk - Arbitrary object to write\n   * @param encoding - Encoding to use when writing payload\n   * @param callback - Called when writing is complete or an error occurs\n   */\n  _write(chunk: unknown, _encoding: BufferEncoding, callback: (error?: Error | null) => void): void {\n    this._parent.push({\n      name: this._name,\n      data: chunk,\n    });\n    callback();\n  }\n}\n","import { BufferEncoding } from \"@toruslabs/openlogin-utils\";\nimport eos from \"end-of-stream\";\nimport once from \"once\";\nimport pump from \"pump\";\nimport { Duplex } from \"readable-stream\";\nimport type { Readable, Writable } from \"stream\";\n\nimport Substream from \"./substream\";\n\nexport const IGNORE_SUBSTREAM = Symbol(\"IGNORE_SUBSTREAM\");\n\nexport type Stream = Readable | Writable;\n\ninterface Chunk {\n  name: string;\n  data: unknown;\n}\n\nexport class ObjectMultiplex extends Duplex {\n  public _substreams: Record<string, Substream | typeof IGNORE_SUBSTREAM>;\n\n  getStream: (name: string) => Substream | symbol;\n\n  constructor(opts: Record<string, unknown> = {}) {\n    super({\n      ...opts,\n      objectMode: true,\n    });\n    this._substreams = {};\n  }\n\n  createStream(name: string): Substream {\n    // validate name\n    if (!name) {\n      throw new Error(\"ObjectMultiplex - name must not be empty\");\n    }\n\n    if (this._substreams[name]) {\n      throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n    }\n\n    // create substream\n    const substream = new Substream({ parent: this, name });\n    this._substreams[name] = substream;\n\n    // listen for parent stream to end\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    anyStreamEnd(this, (_error?: Error | null) => substream.destroy(_error || undefined));\n\n    return substream;\n  }\n\n  // ignore streams (dont display orphaned data warning)\n  ignoreStream(name: string): void {\n    // validate name\n    if (!name) {\n      throw new Error(\"ObjectMultiplex - name must not be empty\");\n    }\n    if (this._substreams[name]) {\n      throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n    }\n    // set\n    this._substreams[name] = IGNORE_SUBSTREAM;\n  }\n\n  _read(): void {\n    return undefined;\n  }\n\n  _write(chunk: Chunk, _encoding: BufferEncoding, callback: (error?: Error | null) => void): void {\n    const { name, data } = chunk;\n\n    if (!name) {\n      window.console.warn(`ObjectMultiplex - malformed chunk without name \"${chunk}\"`);\n      return callback();\n    }\n\n    // get corresponding substream\n    const substream = this._substreams[name];\n    if (!substream) {\n      window.console.warn(`ObjectMultiplex - orphaned data for stream \"${name}\"`);\n      return callback();\n    }\n\n    // push data into substream\n    if (substream !== IGNORE_SUBSTREAM) {\n      substream.push(data);\n    }\n\n    return callback();\n  }\n}\n\n// util\nfunction anyStreamEnd(stream: ObjectMultiplex, _cb: (error?: Error | null) => void) {\n  const cb = once(_cb);\n  eos(stream as unknown as Stream, { readable: false }, cb);\n  eos(stream as unknown as Stream, { writable: false }, cb);\n}\n\nexport function setupMultiplex(stream: Duplex): ObjectMultiplex {\n  const mux = new ObjectMultiplex();\n  mux.getStream = function streamHelper(name: string) {\n    if (this._substreams[name]) {\n      return this._substreams[name];\n    }\n    return this.createStream(name);\n  };\n\n  pump(stream as unknown as Stream, mux as unknown as Stream, stream as unknown as Stream, (err) => {\n    if (err) window.console.error(err);\n  });\n  return mux;\n}\n","import BasePostMessageStream from \"./basePostMessageStream\";\n\nexport default class PostMessageStream extends BasePostMessageStream {\n  _postMessage(data: unknown): void {\n    let originConstraint = this._targetOrigin;\n    if (typeof data === \"object\") {\n      const dataObj = data as Record<string, unknown>;\n      if (typeof dataObj.data === \"object\") {\n        const dataObjData = dataObj.data as Record<string, unknown>;\n        if (Array.isArray(dataObjData.params) && dataObjData.params.length > 0) {\n          const dataObjDataParam = dataObjData.params[0] as Record<string, unknown>;\n          if (dataObjDataParam._origin) {\n            originConstraint = dataObjDataParam._origin as string;\n          }\n\n          // add a constraint for the response\n          dataObjDataParam._origin = window.location.origin;\n        }\n      }\n    }\n\n    this._targetWindow.postMessage(\n      {\n        target: this._target,\n        data,\n      },\n      originConstraint\n    );\n  }\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,"import Torus, { NetworkInterface, TorusCtorArgs, TorusLoginParams, TorusParams } from \"@toruslabs/solana-embed\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  BaseAdapterSettings,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n  Web3AuthError,\n} from \"@web3auth/base\";\nimport { BaseSolanaAdapter } from \"@web3auth/base-solana-adapter\";\nimport { ITorusWalletProvider, TorusInjectedProvider } from \"@web3auth/solana-provider\";\n\nexport interface SolanaWalletOptions extends BaseAdapterSettings {\n  adapterSettings?: TorusCtorArgs;\n  loginSettings?: TorusLoginParams;\n  initParams?: Omit<TorusParams, \"network\">;\n}\n\nexport class SolanaWalletAdapter extends BaseSolanaAdapter<void> {\n  readonly name: string = WALLET_ADAPTERS.TORUS_SOLANA;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.SOLANA;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.SOLANA;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public torusInstance: Torus | null = null;\n\n  private torusWalletOptions?: TorusCtorArgs;\n\n  private initParams?: TorusParams;\n\n  private loginSettings?: TorusLoginParams = {};\n\n  private solanaProvider: TorusInjectedProvider | null = null;\n\n  constructor(params: SolanaWalletOptions = {}) {\n    super(params);\n    this.torusWalletOptions = params.adapterSettings || {};\n    this.initParams = params.initParams || {};\n    this.loginSettings = params.loginSettings || {};\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    if (this.status === ADAPTER_STATUS.CONNECTED && this.solanaProvider) {\n      return this.solanaProvider?.provider || null;\n    }\n    return null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions = {}): Promise<void> {\n    await super.init(options);\n    super.checkInitializationRequirements();\n    const { chainId, blockExplorer, displayName, rpcTarget, ticker, tickerName } = this.chainConfig as CustomChainConfig;\n    const network: NetworkInterface = { chainId, rpcTarget, blockExplorerUrl: blockExplorer, displayName, tickerName, ticker, logo: \"\" };\n\n    this.torusInstance = new Torus(this.torusWalletOptions);\n    log.debug(\"initializing torus solana adapter init\");\n    await this.torusInstance.init({ showTorusButton: false, ...this.initParams, network });\n\n    this.solanaProvider = new TorusInjectedProvider({\n      config: {\n        chainConfig: this.chainConfig as CustomChainConfig,\n      },\n    });\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.TORUS_SOLANA);\n\n    try {\n      log.debug(\"initializing torus solana adapter\");\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with cached torus solana provider\", error);\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n    }\n  }\n\n  async connect(): Promise<SafeEventEmitterProvider | null> {\n    super.checkConnectionRequirements();\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    if (!this.solanaProvider) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.TORUS_SOLANA });\n    try {\n      await this.torusInstance.login(this.loginSettings);\n      try {\n        const torusInpageProvider = this.torusInstance.provider as unknown as ITorusWalletProvider;\n        torusInpageProvider.sendTransaction = this.torusInstance.sendTransaction.bind(this.torusInstance);\n        torusInpageProvider.signAllTransactions = this.torusInstance.signAllTransactions.bind(this.torusInstance);\n        torusInpageProvider.signMessage = this.torusInstance.signMessage.bind(this.torusInstance);\n        torusInpageProvider.signTransaction = this.torusInstance.signTransaction.bind(this.torusInstance);\n        await this.solanaProvider.setupProvider(torusInpageProvider);\n      } catch (error: unknown) {\n        // some issue in solana wallet, always connecting to mainnet on init.\n        // fallback to change network if not connected to correct one on login.\n        if (error instanceof Web3AuthError && error.code === 5010) {\n          const { chainId, blockExplorer, displayName, rpcTarget, ticker, tickerName } = this.chainConfig as CustomChainConfig;\n          const network = { chainId, rpcTarget, blockExplorerUrl: blockExplorer, displayName, tickerName, ticker, logo: \"\" };\n          await this.torusInstance.setProvider(network);\n        } else {\n          throw error;\n        }\n      }\n      this.status = ADAPTER_STATUS.CONNECTED;\n      this.torusInstance.showTorusButton();\n      this.emit(ADAPTER_STATUS.CONNECTED, { adapter: WALLET_ADAPTERS.TORUS_SOLANA, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n      return this.provider;\n    } catch (error) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      throw WalletLoginError.connectionError(\"Failed to login with torus solana wallet\");\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    await super.disconnectSession();\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    await this.torusInstance.logout();\n    if (options.cleanup) {\n      // ready to connect again\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.torusInstance = null;\n      this.solanaProvider = null;\n    } else {\n      // ready to connect again\n      this.status = ADAPTER_STATUS.READY;\n    }\n    await super.disconnect();\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    const userInfo = await this.torusInstance.getUserInfo();\n    return userInfo;\n  }\n}\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","'use strict';\n\nconst isStream = stream =>\n\tstream !== null &&\n\ttypeof stream === 'object' &&\n\ttypeof stream.pipe === 'function';\n\nisStream.writable = stream =>\n\tisStream(stream) &&\n\tstream.writable !== false &&\n\ttypeof stream._write === 'function' &&\n\ttypeof stream._writableState === 'object';\n\nisStream.readable = stream =>\n\tisStream(stream) &&\n\tstream.readable !== false &&\n\ttypeof stream._read === 'function' &&\n\ttypeof stream._readableState === 'object';\n\nisStream.duplex = stream =>\n\tisStream.writable(stream) &&\n\tisStream.readable(stream);\n\nisStream.transform = stream =>\n\tisStream.duplex(stream) &&\n\ttypeof stream._transform === 'function';\n\nmodule.exports = isStream;\n"],"names":["BaseSolanaAdapter","_BaseAdapter","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_init","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_","wrap","_context","prev","next","this","chainConfig","getChainConfig","CHAIN_NAMESPACES","stop","_x","_authenticateUser","_callee2","_this$chainConfig","chainNamespace","chainId","accounts","existingToken","payload","challenge","encodedMessage","signedMessage","idToken","_context2","provider","status","ADAPTER_STATUS","WalletLoginError","request","method","sent","length","getSavedToken","name","checkIfTokenIsExpired","abrupt","domain","window","location","origin","uri","href","address","parseInt","version","nonce","Math","random","toString","slice","issuedAt","Date","toISOString","signChallenge","TextEncoder","encode","params","message","display","verifySignedChallenge","bs58","sessionTime","clientId","web3AuthNetwork","saveToken","_disconnectSession","_callee3","_context3","_get","_getPrototypeOf","prototype","call","clearToken","_disconnect","_callee4","_context4","rehydrated","emit","ADAPTER_EVENTS","BaseAdapter","randomId","randombytes","URL","base64urlLib","keccakLib","noop","ACK","BasePostMessageStream","_Duplex","_createSuper$6","_ref","_this","target","_ref$targetWindow","targetWindow","_ref$targetOrigin","targetOrigin","objectMode","_defineProperty","_assertThisInitialized","Error","_haveSyn","_name","_target","_targetWindow","_targetOrigin","_onMessage","onMessage","bind","_synIntervalId","addEventListener","_handShake","cork","_write","data","_break","push","err","uncork","originConstraint","postMessage","event","source","_typeof","_onData","cb","_postMessage","removeEventListener","Duplex","safeApply","handler","context","args","Reflect","setTimeout","SafeEventEmitter","_EventEmitter","_createSuper$5","type","doError","events","_events","undefined","error","_len","Array","_key","er","concat","len","listeners","arr","n","copy","i","arrayClone","EventEmitter","SerializableError","_Error","_createSuper$4","code","Number","isInteger","stringify","stack","_wrapNativeSuper","getRpcPromiseCallback","resolve","reject","unwrapResult","response","isArray","result","createStreamMiddleware","idMap","stream","read","write","res","_encoding","id","processNotification","Object","assign","end","processResponse","_err","middleware","req","JRPCEngine","_SafeEventEmitter","_createSuper$3","_middleware","_handleBatch","_handle","_promiseHandle","_this2","_yield$JRPCEngine$_ru","_yield$JRPCEngine$_ru2","middlewareError","isComplete","returnHandlers","_runAllMiddleware","_slicedToArray","_runReturnHandlers","_ref2","handlerCallback","t0","_x5","_x2","_x3","_x4","_handleBatch2","reqs","responses","Promise","all","map","_x6","_x7","_this3","_handle2","callerReq","_error2","_error3","jsonrpc","_objectSpread$1","_processRequest","serializeError","_x8","_x9","_processRequest2","_callee5","_yield$JRPCEngine$_ru3","_yield$JRPCEngine$_ru4","_context5","_checkForCompletion","_x10","_x11","_runAllMiddleware2","_callee6","middlewareStack","_iterator","_step","_yield$JRPCEngine$_ru5","_yield$JRPCEngine$_ru6","_context6","_createForOfIteratorHelper","s","done","_runMiddleware","e","f","finish","reverse","_x12","_x13","_x14","returnHandler","_runReturnHandlers2","_callee7","handlers","_iterator2","_step2","_loop","_context8","_context7","delegateYield","t1","_x15","Substream","_createSuper$2","parent","_parent","chunk","callback","IGNORE_SUBSTREAM","Symbol","ObjectMultiplex","_createSuper$1","opts","_objectSpread","_substreams","substream","_cb","once","eos","readable","writable","anyStreamEnd","_error","destroy","console","warn","messages","errors","disconnected","permanentlyDisconnected","unsupportedSync","invalidDuplexStream","invalidOptions","maxEventListeners","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","info","connected","warnings","TORUS_BUILD_ENV","PRODUCTION","DEVELOPMENT","TESTING","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","configuration","supportedVerifierList","api","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","prodTorusUrl","localStorageKey","hostname","log","loglevel","getWindowId","getTorusUrl","buildEnv","torusUrl","logLevel","getUserLanguage","userLanguage","navigator","language","userLanguages","split","hasOwnProperty","FEATURES_PROVIDER_CHANGE_WINDOW","height","width","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_DEFAULT_POPUP_WINDOW","FEATURES_CONFIRM_WINDOW","getPopupFeatures","w","h","dualScreenLeft","screenLeft","screenX","dualScreenTop","screenTop","screenY","innerWidth","document","documentElement","clientWidth","screen","innerHeight","clientHeight","left","abs","top","BaseProvider","connectionStream","_ref$maxEventListener","_ref$jsonRpcStreamNam","jsonRpcStreamName","duplex","isTorus","setMaxListeners","_handleConnect","_handleDisconnect","_handleStreamDisconnect","_rpcRequest","_initializeState","sendAsync","mux","pump","ignoreStream","jsonRpcConnection","createStream","rpcEngine","_end","originalId","newId","ethErrors","createLoggerMiddleware","_rpcEngine","jsonRpcConnectionEvents","_request","streamName","remoteLabel","emitter","warningMsg","listenerCount","logStreamDisconnectWarning","handleEvent","handle","eventName","handlerArgs","handlerWrapper","documentReady","_documentReady","_callee27","_context27","readyState","htmlToElement","html","template","createElement","trimmedHtml","trim","innerHTML","content","firstChild","isLegacyTransactionInstance","transaction","PopupHandler","_SafeEventEmitter2","_super2","_this4","url","features","windowTimer","iClosedWindow","_setupTimer","_this5","setInterval","closed","clearInterval","_this$window","open","focus","close","locationReplaceOnRedirect","replace","TorusCommunicationProvider","_BaseProvider","_super3","_this6","_ref$maxEventListener2","_ref$jsonRpcStreamNam2","_state","_objectSpread$2","_defaultState","dappStorageKey","languageTranslations","embedTranslations","windowRefs","on","isConnected","COMMUNICATION_NOTIFICATIONS","isFullScreen","rid","_displayIframe","isFull","windowId","_createPopupBlockAlert","_handleCloseWindow","currentLoginProvider","isLoggedIn","get","isIFrameFullScreen","_initializeState2","torusAlertContainer","torusIframe","_yield$this$request","_this7","COMMUNICATION_JRPC_METHODS","initialized","_this8","_ref3","finalUrl","hash","handledWindow","_ref4","_ref4$isFull","_ref4$rid","style","right","bottom","torusWidgetVisibility","buttonPosition","_payload","tryWindowHandle","debug","isRecoverable","errorMessage","isPermanentlyDisconnected","EthereumRpcError","_createPopupBlockAlert2","logoUrl","torusAlert","successAlert","btnContainer","bindOnLoad","attachOnLoad","_this9","getLogoUrl","appendChild","_handleWindow","remove","children","hasEmittedConnection","TorusInPageProvider","_BaseProvider2","_super4","_this10","_ref$maxEventListener3","_ref$jsonRpcStreamNam3","selectedAddress","_handleAccountsChanged","_handleChainChanged","_handleUnlockStateChanged","PROVIDER_NOTIFICATIONS","_initializeState3","_yield$this$request2","isUnlocked","PROVIDER_JRPC_METHODS","_this11","isInternal","isEthAccounts","finalAccounts","dequal","_ref6","imgExists","img","onload","onerror","src","getSiteName","siteName","querySelector","metaTitle","title","getSiteIcon","_getSiteIcon","_callee28","_document","icon","_context28","from","querySelectorAll","find","_icon","Boolean","t2","getSiteMetadata","_ref7","PROVIDER_UNSAFE_METHODS","COMMUNICATION_UNSAFE_METHODS","isLocalStorageAvailable","storage","x","setItem","removeItem","storageAvailable","_preLoadIframe","torusIframeHtml","_yield$getTorusUrl","crossOrigin","rel","relList","supports","head","Torus","_ref8$modalZIndex","modalZIndex","isInitialized","requestedLoginProvider","alertZIndex","communicationProvider","_callee10","_ref9","_ref9$buildEnv","_ref9$enableLogging","enableLogging","network","_ref9$showTorusButton","showTorusButton","_ref9$useLocalStorage","useLocalStorage","_ref9$buttonPosition","_ref9$apiKey","apiKey","_ref9$extraParams","extraParams","whiteLabel","_yield$getTorusUrl2","torusIframeUrl","hashParams","handleSetup","_this12","_args10","_context10","setAPIKey","enableAll","setDefaultLevel","disableAll","handleDappStorageKey","pathname","endsWith","URLSearchParams","append","styleLink","_ref10","_callee9","_context9","body","_callee8","dappMetadata","contentWindow","_setupWeb3","topupHide","isTopupHidden","hideTorusButton","torus","_login","_callee11","_this13","_args11","_context11","loginProvider","login_hint","_loginWithPrivateKey","_callee12","loginParams","privateKey","userInfo","_yield$this$communica","_context12","success","_logout","_callee13","_context13","_cleanUp","_callee14","_context14","logout","clearInit","isElement","element","Element","Document","contains","_setProvider","_callee15","_context15","_showWallet","_callee16","path","instanceId","finalPath","_args16","_context16","searchParams","keys","forEach","_getUserInfo","_callee17","userInfoResponse","_context17","_initiateTopup","_callee18","topupResponse","_context18","_getAccounts","_callee19","_context19","_sendTransaction","_callee20","isLegacyTransaction","_context20","serialize","requireAllSignatures","Buffer","_signAndSendTransaction","_callee21","options","_context21","signature","_signTransaction","_callee22","parsed","_context22","serializeMessage","messageOnly","JSON","parse","publicKey","PublicKey","addSignature","_signAllTransactions","_callee23","transactions","signatures","_context23","tx","item","idx","_x16","_signMessage","_callee24","_context24","_x17","_getGaslessPublicKey","_callee25","_context25","storedKey","localStorage","getItem","generatedKey","_setupWeb","_callee26","providerParams","providerStream","communicationStream","inPageProvider","detectAccountRequestPrototypeModifier","proxiedInPageProvider","proxiedCommunicationProvider","_this14","_context26","includes","m","originalMethod","self","_request$params","login","then","catch","Proxy","deleteProperty","_x18","SolanaWalletAdapter","_BaseSolanaAdapter","WALLET_ADAPTERS","ADAPTER_NAMESPACES","ADAPTER_CATEGORY","torusWalletOptions","adapterSettings","initParams","loginSettings","_this$solanaProvider","solanaProvider","set","blockExplorer","displayName","rpcTarget","ticker","tickerName","_args","blockExplorerUrl","logo","torusInstance","init","TorusInjectedProvider","config","autoConnect","connect","_connect","torusInpageProvider","_this$chainConfig2","WalletInitializationError","adapter","sendTransaction","signAllTransactions","signMessage","signTransaction","setupProvider","Web3AuthError","setProvider","reconnected","_args3","cleanup","getUserInfo","module","exports","equal","a","b","constructor","RegExp","flags","valueOf","isStream","pipe","_writableState","_read","_readableState","transform","_transform"],"sourceRoot":""}